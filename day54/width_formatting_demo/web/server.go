// web/server.go
package web

import (
	"html/template"
	"log"
	"net/http"
	"os"
)

func StartServer() error {
	port := os.Getenv("PORT")
	if port == "" {
		port = "8080"
	}

	http.HandleFunc("/", homeHandler)

	log.Printf("üöÄ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:%s", port)
	return http.ListenAndServe(":"+port, nil)
}

func homeHandler(w http.ResponseWriter, r *http.Request) {
	tmpl, err := template.ParseFiles("web/templates/index.html")
	if err != nil {
		http.Error(w, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞", http.StatusInternalServerError)
		log.Println("‚ùå –û—à–∏–±–∫–∞ —à–∞–±–ª–æ–Ω–∞:", err)
		return
	}

	data := struct {
		Title   string
		Examples []WidthExample
	}{
		Title: "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∏—Ä–∏–Ω—ã –≤ Go ‚Äî –î–µ–º–æ Day 54x",
		Examples: []WidthExample{
			{
				Description: "–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é (—à–∏—Ä–∏–Ω–∞ 10)",
				Code:        `fmt.Printf("|%10s|", "Go")`,
				Output:      "|        Go|",
			},
			{
				Description: "–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é (—à–∏—Ä–∏–Ω–∞ 10)",
				Code:        `fmt.Printf("|%-10s|", "Go")`,
				Output:      "|Go        |",
			},
			{
				Description: "–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω—É–ª—è–º–∏ (—à–∏—Ä–∏–Ω–∞ 6)",
				Code:        `fmt.Printf("ID: %06d", 42)`,
				Output:      "ID: 000042",
			},
			{
				Description: "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —à–∏—Ä–∏–Ω–∞ —á–µ—Ä–µ–∑ *",
				Code:        `fmt.Printf("|%*s|", 15, "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏")`,
				Output:      "|   –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏|",
			},
			{
				Description: "–®–∏—Ä–∏–Ω–∞ + —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è float",
				Code:        `fmt.Printf("|%10.2f|", 3.1415)`,
				Output:      "|      3.14|",
			},
			{
				Description: "–¢–∞–±–ª–∏—Ü–∞ —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π",
				Code: `fmt.Printf("| %-10s | %6s | %-15s |", "–ê–ª–µ–∫—Å–µ–π", "28", "–ú–æ—Å–∫–≤–∞")`,
				Output: "| –ê–ª–µ–∫—Å–µ–π    |     28 | –ú–æ—Å–∫–≤–∞          |",
			},
		},
	}

	err = tmpl.Execute(w, data)
	if err != nil {
		http.Error(w, "–û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞", http.StatusInternalServerError)
		log.Println("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞:", err)
	}
}

type WidthExample struct {
	Description string
	Code        string
	Output      string
}
