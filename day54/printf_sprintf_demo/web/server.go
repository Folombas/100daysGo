// web/server.go
package web

import (
	"html/template"
	"log"
	"net/http"
	"os"
)

func StartServer() error {
	port := os.Getenv("PORT")
	if port == "" {
		port = "8080"
	}

	http.HandleFunc("/", homeHandler)
	http.Handle("/static/", http.StripPrefix("/static/", http.FileServer(http.Dir("web/static/"))))

	log.Printf("üöÄ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:%s", port)
	return http.ListenAndServe(":"+port, nil)
}

func homeHandler(w http.ResponseWriter, r *http.Request) {
	tmpl, err := template.ParseFiles("web/templates/index.html")
	if err != nil {
		http.Error(w, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞", http.StatusInternalServerError)
		log.Println("‚ùå –û—à–∏–±–∫–∞ —à–∞–±–ª–æ–Ω–∞:", err)
		return
	}

	data := struct {
		Title string
		Examples []Example
	}{
		Title: "Printf & Sprintf –≤ Go ‚Äî –î–µ–º–æ Day 54",
		Examples: []Example{
			{Code: `fmt.Printf("–ü—Ä–∏–≤–µ—Ç, %s!", "–º–∏—Ä")`, Output: "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"},
			{Code: `fmt.Printf("–ß–∏—Å–ª–æ: %d, –ü–ª–∞–≤–∞—é—â–µ–µ: %.2f", 42, 3.1415)`, Output: "–ß–∏—Å–ª–æ: 42, –ü–ª–∞–≤–∞—é—â–µ–µ: 3.14"},
			{Code: `s := fmt.Sprintf("–°–æ–æ–±—â–µ–Ω–∏–µ: %s", "–ì–æ—Ç–æ–≤–æ")`, Output: `s = "–°–æ–æ–±—â–µ–Ω–∏–µ: –ì–æ—Ç–æ–≤–æ"`},
			{Code: `fmt.Printf("%10s | %-10s", "–ü—Ä–∞–≤–æ", "–õ–µ–≤–æ")`, Output: "     –ü—Ä–∞–≤–æ | –õ–µ–≤–æ      "},
			{Code: `fmt.Printf("–¶–µ–Ω–∞: %8.2f‚ÇΩ", 1234.5)`, Output: "–¶–µ–Ω–∞:  1234.50‚ÇΩ"},
			{Code: `fmt.Printf("–ì–æ—Ä–æ–¥: %s", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥")`, Output: "–ì–æ—Ä–æ–¥: –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"},
		},
	}

	err = tmpl.Execute(w, data)
	if err != nil {
		http.Error(w, "–û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞", http.StatusInternalServerError)
		log.Println("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞:", err)
	}
}

type Example struct {
	Code   string
	Output string
}
