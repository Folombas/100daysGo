package main

import (
	"fmt"
	"os"
)

func main() {
	fmt.Println("üöÄ GO MODULES & DEPENDENCIES DEMO")
	fmt.Println("=================================")

	// –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
	wd, _ := os.Getwd()
	fmt.Printf("üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: %s\n\n", wd)

	// 1. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥—É–ª—è
	fmt.Println("üéØ 1. –°–û–ó–î–ê–ù–ò–ï –ú–û–î–£–õ–Ø:")
	fmt.Println("   go mod init go-mod-init")
	fmt.Println("   -> –°–æ–∑–¥–∞–µ—Ç go.mod —Ñ–∞–π–ª")

	// 2. –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã go mod
	fmt.Println("üõ†Ô∏è  2. –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´:")
	commands := []struct {
		cmd string
		desc string
	}{
		{"go mod init", "–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å"},
		{"go mod tidy", "–û—á–∏—â–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"},
		{"go mod download", "–°–∫–∞—á–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"},
		{"go mod vendor", "–°–æ–∑–¥–∞–µ—Ç vendor –ø–∞–ø–∫—É"},
		{"go mod graph", "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥—Ä–∞—Ñ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"},
		{"go mod why", "–û–±—ä—è—Å–Ω—è–µ—Ç –∑–∞—á–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å"},
	}

	for _, cmd := range commands {
		fmt.Printf("   %s - %s\n", cmd.cmd, cmd.desc)
	}
	fmt.Println()

	// 3. –ü—Ä–∏–º–µ—Ä go.mod —Ñ–∞–π–ª–∞
	fmt.Println("üìÑ 3. –ü–†–ò–ú–ï–† GO.MOD –§–ê–ô–õ–ê:")
	goModExample := `module go-mod-init

go 1.21

require (
    github.com/gorilla/mux v1.8.0
    github.com/sirupsen/logrus v1.9.0
)

replace example.com/local => ../local-package`
	fmt.Println(goModExample)
	fmt.Println()

	// 4. –†–∞–±–æ—Ç–∞ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
	fmt.Println("üì¶ 4. –†–ê–ë–û–¢–ê –° –ó–ê–í–ò–°–ò–ú–û–°–¢–Ø–ú–ò:")
	fmt.Println("   go get github.com/package/name@v1.2.3")
	fmt.Println("   go get -u github.com/package/name")
	fmt.Println("   go mod tidy")
	fmt.Println()

	// 5. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
	fmt.Println("üîß 5. –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø:")

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ go.mod
	if _, err := os.Stat("go.mod"); os.IsNotExist(err) {
		fmt.Println("   ‚ùå go.mod –Ω–µ –Ω–∞–π–¥–µ–Ω - —Å–æ–∑–¥–∞–µ–º...")
		// –°–æ–∑–¥–∞–µ–º go.mod
		createGoMod()
	} else {
		fmt.Println("   ‚úÖ go.mod –Ω–∞–π–¥–µ–Ω")
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ go.mod
	showGoMod()

	fmt.Println("\nüéØ –í–´–í–û–î–´:")
	fmt.Println("‚úÖ Go modules - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏")
	fmt.Println("‚úÖ go.mod - —Ñ–∞–π–ª –æ–ø–∏—Å–∞–Ω–∏—è –º–æ–¥—É–ª—è")
	fmt.Println("‚úÖ go.sum - —Ñ–∞–π–ª —Å —Ö–µ—à–∞–º–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
	fmt.Println("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ go mod tidy –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
	fmt.Println("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
}

func createGoMod() {
	content := `module example.com/demo

go 1.21

require (
    golang.org/x/example v0.0.0-20210811190340-787a929d5a0d
)

replace example.com/local => ./local
`

	err := os.WriteFile("go.mod", []byte(content), 0644)
	if err != nil {
		fmt.Printf("   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è go.mod: %v\n", err)
		return
	}
	fmt.Println("   ‚úÖ go.mod —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
}

func showGoMod() {
	data, err := os.ReadFile("go.mod")
	if err != nil {
		fmt.Printf("   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è go.mod: %v\n", err)
		return
	}

	fmt.Println("   üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ go.mod:")
	fmt.Printf("%s\n", string(data))
}
