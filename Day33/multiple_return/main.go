package main

import (
	"fmt"
	//"os"
)

func main() {
	fmt.Println("üìã –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ Go")
	fmt.Println("======================================================")
	fmt.Println()

	// –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã
	fmt.Println("1. –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã:")
	fmt.Println("-------------------")
	example1()
	fmt.Println()

	// –ü—Ä–∏–º–µ—Ä —Å –æ—à–∏–±–∫–∞–º–∏
	fmt.Println("2. –ü—Ä–∏–º–µ—Ä —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫:")
	fmt.Println("-----------------------------")
	example2()
	fmt.Println()

	// –ü—Ä–∏–º–µ—Ä —Å –º–µ—Ç–æ–¥–∞–º–∏
	fmt.Println("3. –ü—Ä–∏–º–µ—Ä —Å –º–µ—Ç–æ–¥–∞–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä:")
	fmt.Println("-----------------------------")
	example3()
	fmt.Println()

	// –ó–∞–ø—É—Å–∫ –≤–µ–±-–¥–µ–º–æ
	fmt.Println("4. –ó–∞–ø—É—Å–∫ –≤–µ–±-–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:")
	fmt.Println("--------------------------")
	fmt.Println("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç–¥–µ–ª—å–Ω–æ: go run demo/web_demo.go")
	fmt.Println("–ò –æ—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080 –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
}

func example1() {
	// –ü—Ä–æ—Å—Ç–æ–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –¥–≤—É—Ö –∑–Ω–∞—á–µ–Ω–∏–π
	a, b := swap(10, 20)
	fmt.Printf("swap(10, 20) = %d, %d\n", a, b)

	// –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —Ç—Ä–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π
	name, age, active := getUserInfo()
	fmt.Printf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: %s, –≤–æ–∑—Ä–∞—Å—Ç: %d, –∞–∫—Ç–∏–≤–µ–Ω: %t\n", name, age, active)

	// –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π
	firstName, _, _ := parseName("–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤")
	fmt.Printf("–ò–º—è: %s\n", firstName)
}

func example2() {
	// –†–∞–±–æ—Ç–∞ —Å –æ—à–∏–±–∫–∞–º–∏
	result, err := divide(10, 2)
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞: %v\n", err)
	} else {
		fmt.Printf("10 / 2 = %.1f\n", result)
	}

	// –û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å
	result, err = divide(10, 0)
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞: %v\n", err)
	} else {
		fmt.Printf("10 / 0 = %.1f\n", result)
	}
}

func example3() {
	// –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	user := User{FirstName: "–ü–µ—Ç—Ä", LastName: "–ü–µ—Ç—Ä–æ–≤", Age: 25}
	
	// –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π
	fullName, isAdult := user.GetInfo()
	fmt.Printf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: %s, —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π: %t\n", fullName, isAdult)
	
	// –ú–µ—Ç–æ–¥ —Å –æ—à–∏–±–∫–æ–π
	email, err := user.GetEmail()
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞: %v\n", err)
	} else {
		fmt.Printf("Email: %s\n", email)
	}
}