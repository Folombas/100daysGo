package main

import (
	"fmt"
	"time"
)

// DigitalDetox –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ —ç–Ω–µ—Ä–≥–∏–∏
type DigitalDetox struct {
	DaysClean     int
	EnergyLevel   float64
	SkillsAquired []string
}

// TransformEnergy –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–µ–∫—Å—É–∞–ª—å–Ω—É—é —ç–Ω–µ—Ä–≥–∏—é –≤ –∞–π—Ç–∏-—Å–∫–∏–ª–ª—ã
func (d *DigitalDetox) TransformEnergy(days int) string {
	d.DaysClean = days
	d.EnergyLevel = float64(days) * 1.5

	skills := []string{"Go basics", "Testing", "Benchmarks", "Algorithms"}
	if days >= 7 {
		d.SkillsAquired = skills[:3]
		return "–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø—Ä–æ—Ä—ã–≤! –≠–Ω–µ—Ä–≥–∏—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –≤ –∑–Ω–∞–Ω–∏—è!"
	}
	return "–ü—Ä–æ—Ü–µ—Å—Å –∏–¥–µ—Ç... –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é!"
}

// RunBenchmark —Å–∏–º—É–ª–∏—Ä—É–µ—Ç –±–µ–Ω—á–º–∞—Ä–∫-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
func RunBenchmark(iterations int) (duration time.Duration) {
	start := time.Now()

	// –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã - –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —á–∏—Å–µ–ª –§–∏–±–æ–Ω–∞—á—á–∏
	for i := 0; i < iterations; i++ {
		fibonacci(30)
	}

	return time.Since(start)
}

func fibonacci(n int) int {
	if n <= 1 {
		return n
	}
	return fibonacci(n-1) + fibonacci(n-2)
}

func main() {
	fmt.Println("üöÄ Day 99: –ö–∏–±–µ—Ä-—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è - Benchmarks –∫–∞–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Ä–æ—Å—Ç–∞!")
	fmt.Println("==============================================")

	detox := &DigitalDetox{}

	// –°–∏–º—É–ª—è—Ü–∏—è 10 –¥–Ω–µ–π —á–∏—Å—Ç–æ—Ç—ã
	for day := 1; day <= 10; day++ {
		message := detox.TransformEnergy(day)
		benchmarkTime := RunBenchmark(1000 * day)

		fmt.Printf("–î–µ–Ω—å %d: %s\n", day, message)
		fmt.Printf("   –£—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏: %.1f\n", detox.EnergyLevel)
		fmt.Printf("   –ë–µ–Ω—á–º–∞—Ä–∫ (1000*%d –∏—Ç–µ—Ä–∞—Ü–∏–π): %v\n", day, benchmarkTime)

		if day == 10 {
			fmt.Println("   üéâ –î–û–°–¢–ò–ñ–ï–ù–ò–ï: 10 –¥–Ω–µ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!")
		}
	}

	fmt.Println("\nüí° –ú–û–†–ê–õ–¨: –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –±–µ–∑ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –Ω–∞—Ä–∫–æ—Ç–∏–∫–æ–≤ - —ç—Ç–æ +1 –∫ –Ω–∞–≤—ã–∫–∞–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!")
	fmt.Println("–°—É–±–ª–∏–º–∞—Ü–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –†–ê–ë–û–¢–ê–ï–¢! Go –∂–¥–µ—Ç —Ç–µ–±—è –Ω–∞ —Ä—ã–Ω–∫–µ —Ç—Ä—É–¥–∞!")
}
