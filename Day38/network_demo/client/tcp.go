package client

import (
	"bufio"
	"fmt"
	"net"
	"os"
)

func StartTCPClient() {
	fmt.Println("üîå –ó–∞–ø—É—Å–∫ TCP –∫–ª–∏–µ–Ω—Ç–∞...")
	fmt.Println("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ localhost:8081")
	fmt.Println("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞):")

	conn, err := net.Dial("tcp", "localhost:8081")
	if err != nil {
		fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: %v\n", err)
		return
	}
	defer conn.Close()

	scanner := bufio.NewScanner(os.Stdin)
	for {
		fmt.Print("> ")
		if !scanner.Scan() {
			break
		}

		message := scanner.Text()
		if message == "" {
			continue
		}

		// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
		fmt.Fprintf(conn, message+"\n")

		// –ß—Ç–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
		response, err := bufio.NewReader(conn).ReadString('\n')
		if err != nil {
			fmt.Printf("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞: %v\n", err)
			break
		}

		fmt.Printf("üì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: %s", response)

		if message == "exit" {
			break
		}
	}

	fmt.Println("üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç TCP —Å–µ—Ä–≤–µ—Ä–∞")
}