package server

import (
	"bufio"
	"fmt"
	"net"
)

func StartTCPServer() {
	listener, err := net.Listen("tcp", ":8081")
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ TCP —Å–µ—Ä–≤–µ—Ä–∞: %v\n", err)
		return
	}
	defer listener.Close()

	fmt.Println("üîå TCP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8081")
	fmt.Println("üì® –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...")

	for {
		conn, err := listener.Accept()
		if err != nil {
			fmt.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: %v\n", err)
			continue
		}

		go handleTCPConnection(conn)
	}
}

func handleTCPConnection(conn net.Conn) {
	defer conn.Close()
	clientAddr := conn.RemoteAddr().String()
	fmt.Printf("‚úÖ –ù–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: %s\n", clientAddr)

	scanner := bufio.NewScanner(conn)
	for scanner.Scan() {
		message := scanner.Text()
		fmt.Printf("üì© –ü–æ–ª—É—á–µ–Ω–æ –æ—Ç %s: %s\n", clientAddr, message)

		response := fmt.Sprintf("–°–µ—Ä–≤–µ—Ä –ø–æ–ª—É—á–∏–ª: %s (–¥–ª–∏–Ω–∞: %d —Å–∏–º–≤–æ–ª–æ–≤)\n", message, len(message))
		if _, err := conn.Write([]byte(response)); err != nil {
			fmt.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: %v\n", err)
			return
		}

		if message == "exit" {
			fmt.Printf("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å %s –∑–∞–∫—Ä—ã—Ç–æ\n", clientAddr)
			return
		}
	}

	if err := scanner.Err(); err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: %v\n", err)
	}
}