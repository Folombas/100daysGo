package main

import (
	"fmt"
)

func main() {
	fmt.Println("üéØ –î–µ–Ω—å 59: –°—Ç—Ä—É–∫—Ç—É—Ä—ã –≤ Go - –§—É–Ω–¥–∞–º–µ–Ω—Ç –¥–∞–Ω–Ω—ã—Ö")
	fmt.Println("============================================")
	fmt.Println()

	// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä
	fmt.Println("1. –ë–∞–∑–æ–≤—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:")
	demoBasicStructs()

	fmt.Println("\n2. –ú–µ—Ç–æ–¥—ã —Å—Ç—Ä—É–∫—Ç—É—Ä:")
	demoMethods()

	fmt.Println("\n3. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:")
	demoInterfaces()

	fmt.Println("\n4. –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:")
	demoEmbeddedStructs()

	fmt.Println("\n‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ò–∑—É—á–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã - —ç—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç Go!")
}

func demoBasicStructs() {
	// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Employee
	emp := Employee{
		ID:        1,
		FirstName: "–ò–≤–∞–Ω",
		LastName:  "–ü–µ—Ç—Ä–æ–≤",
		Position:  "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ Go",
		Salary:    150000,
	}

	fmt.Printf("–°–æ—Ç—Ä—É–¥–Ω–∏–∫: %s %s\n", emp.FirstName, emp.LastName)
	fmt.Printf("–î–æ–ª–∂–Ω–æ—Å—Ç—å: %s\n", emp.Position)
	fmt.Printf("–ó–∞—Ä–ø–ª–∞—Ç–∞: %d —Ä—É–±.\n", emp.Salary)

	// –°–æ–∑–¥–∞–µ–º —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å
	emp2 := &Employee{
		ID:        2,
		FirstName: "–ú–∞—Ä–∏—è",
		LastName:  "–°–∏–¥–æ—Ä–æ–≤–∞",
		Position:  "Team Lead",
		Salary:    250000,
	}

	fmt.Printf("–°–æ—Ç—Ä—É–¥–Ω–∏–∫ 2: %s %s\n", emp2.FirstName, emp2.LastName)
}

func demoEmbeddedStructs() {
	// –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
	manager := Manager{
		Employee: Employee{
			ID:        3,
			FirstName: "–ê–ª–µ–∫—Å–µ–π",
			LastName:  "–ö—É–∑–Ω–µ—Ü–æ–≤",
			Position:  "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞",
			Salary:    300000,
		},
		Department: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
		TeamSize:   10,
	}

	fmt.Printf("–ú–µ–Ω–µ–¥–∂–µ—Ä: %s %s\n", manager.FirstName, manager.LastName)
	fmt.Printf("–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç: %s\n", manager.Department)
	fmt.Printf("–†–∞–∑–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: %d\n", manager.TeamSize)
}
