package main

import (
	"fmt"
	"time"
)

func main() {
	// üéâ –°–ê–ú–´–ô –ì–õ–ê–í–ù–´–ô –ú–û–ú–ï–ù–¢ - –ü–ï–†–í–ê–Ø –†–ê–ë–û–ß–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê!
	fmt.Println("üêπ –î–µ–Ω—å 92: –ú–æ–π –ø–µ—Ä–≤—ã–π –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π Go –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ–º—ã–π –≥–æ—Ñ–µ—Ä!")
	fmt.Println("==========================================")
	
	// üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ "–¥–æ Go"
	fmt.Println("\nüìÖ –ú–æ–π –ø—É—Ç—å –¥–æ —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞:")
	previousLanguages := []string{"Python", "JavaScript", "Java", "C++", "PHP", "Ruby"}
	fmt.Printf("–Ø –Ω–∞—á–∏–Ω–∞–ª –∏–∑—É—á–∞—Ç—å: %v\n", previousLanguages)
	fmt.Printf("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –ª–µ—Ç –Ω–∞ –º–µ—Ç–∞–Ω–∏—è: 5\n")
	fmt.Printf("–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤: 0\n")
	fmt.Printf("–°–æ—Å—Ç–æ—è–Ω–∏–π 'analysis paralysis': 47\n")
	
	// üí° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Go –¥–ª—è –°–î–í–ì/–û–ö–†
	fmt.Println("\n‚ú® –ü–æ—á–µ–º—É Go - —ç—Ç–æ –º–æ–π —à–∞–Ω—Å:")
	benefits := []string{
		"üéØ –ß–ï–¢–ö–ò–ô –°–ò–ù–¢–ê–ö–°–ò–° - –º–µ–Ω—å—à–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ",
		"‚ö° –ë–´–°–¢–†–ê–Ø –ö–û–ú–ü–ò–õ–Ø–¶–ò–Ø - –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
		"üìö –ú–ò–ù–ò–ú–£–ú –ú–ê–ì–ò–ò - –≤—Å—ë —è–≤–Ω–æ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ", 
		"üöÄ –í–°–¢–†–û–ï–ù–ù–´–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–´ - –Ω–µ –Ω—É–∂–Ω–æ –≤—ã–±–∏—Ä–∞—Ç—å –∏–∑ 1000 —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤",
		"üíº –í–û–°–¢–†–ï–ë–û–í–ê–ù–ù–û–°–¢–¨ - —Ä–µ–∞–ª—å–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ —Å –¥–æ—Å—Ç–æ–π–Ω—ã–º–∏ –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏",
	}
	
	for _, benefit := range benefits {
		fmt.Printf("- %s\n", benefit)
		time.Sleep(500 * time.Millisecond) // –≠—Ñ—Ñ–µ–∫—Ç –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
	}
	
	// üéØ –ü–µ—Ä–≤—ã–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–≥–∏
	fmt.Println("\nüöÄ –ú–æ–π –ø–µ—Ä–≤—ã–π —Ä–∞–±–æ—á–∏–π –∫–æ–¥:")
	
	// –ü—Ä–æ—Å—Ç—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
	name := "–ì–æ—à–∞-–ì–æ—Ñ–µ—Ä"
	daysLearning := 92
	targetSalary := 120000
	
	fmt.Printf("–ò–º—è: %s\n", name)
	fmt.Printf("–î–Ω–µ–π –∏–∑—É—á–µ–Ω–∏—è Go: %d\n", daysLearning) 
	fmt.Printf("–¶–µ–ª–µ–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: %d —Ä—É–±.\n", targetSalary)
	
	// –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞
	if daysLearning > 90 {
		fmt.Println("‚úÖ –£–∂–µ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å—Ä–æ–∫ —É–¥–µ—Ä–∂–∞–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è!")
	}
	
	// –ü—Ä–æ—Å—Ç–æ–π —Ü–∏–∫–ª
	fmt.Print("\nüéØ –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è: [")
	for i := 0; i < 10; i++ {
		if i < 9 {
			fmt.Print("‚ñà")
		} else {
			fmt.Print("‚ñí") // –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–µ–≥–º–µ–Ω—Ç –µ—â–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
		}
		time.Sleep(200 * time.Millisecond)
	}
	fmt.Println("] 90%")
	
	// üìà –ü–ª–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–µ–µ
	fmt.Println("\nüéØ –ú–æ–π –ø–ª–∞–Ω –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ 8 –¥–Ω–µ–π:")
	plan := map[int]string{
		93: "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö",
		94: "–§—É–Ω–∫—Ü–∏–∏ –∏ –ø–∞–∫–µ—Ç—ã", 
		95: "–°—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –º–µ—Ç–æ–¥—ã",
		96: "–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã",
		97: "–ì–æ—Ä—É—Ç–∏–Ω—ã –∏ –∫–∞–Ω–∞–ª—ã",
		98: "–†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏",
		99: "HTTP –∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä",
		100: "–§–ò–ù–ê–õ–¨–ù–´–ô –ü–†–û–ï–ö–¢ - —Ä–∞–±–æ—Ç–∞—é—â–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!",
	}
	
	for day, topic := range plan {
		fmt.Printf("Day %d: %s\n", day, topic)
	}
	
	fmt.Println("\nüí™ –°–ï–ö–†–ï–¢ –£–°–ü–ï–•–ê:")
	fmt.Println("–ù–µ –ø—ã—Ç–∞—Ç—å—Å—è –≤—ã—É—á–∏—Ç—å –í–°–Å, –∞ –æ—Å–≤–æ–∏—Ç—å –î–û–°–¢–ê–¢–û–ß–ù–û")
	fmt.Println("–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–π —Ä–∞–±–æ—Ç—ã!")
	
	fmt.Println("\nüéä –ü–û–ó–î–†–ê–í–õ–Ø–Æ –° –ü–ï–†–í–û–ô –†–ê–ë–û–ß–ï–ô –ü–†–û–ì–†–ê–ú–ú–û–ô!")
	fmt.Println("–¢–µ–ø–µ—Ä—å —Ç—ã –Ω–∞—Å—Ç–æ—è—â–∏–π Gopher! üêπ")
}
