package main

import (
    "fmt"
    "runtime"
    "time"
)

// üóëÔ∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–±–æ—Ä—â–∏–∫–∞ –º—É—Å–æ—Ä–∞ –≤ Go
func main() {
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    fmt.Println("üßπ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä Garbage Collection –≤ Go! üá∑üá∫")

    // –í—ã–¥–µ–ª—è–µ–º –º–Ω–æ–≥–æ –ø–∞–º—è—Ç–∏ —Å –ø–æ–º–æ—â—å—é —Å—Ä–µ–∑–∞
    fmt.Println("–°–æ–∑–¥–∞—ë–º –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤...")
    data := make([][]byte, 0, 1000)
    for i := 0; i < 1000; i++ {
        data = append(data, make([]byte, 1024*1024)) // 1MB –Ω–∞ –æ–±—ä–µ–∫—Ç
    }
    fmt.Println("–û–±—ä–µ–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã! üì¶")

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–º—è—Ç–∏
    var memStats runtime.MemStats
    runtime.ReadMemStats(&memStats)
    fmt.Printf("–ü–∞–º—è—Ç—å –¥–æ –æ—á–∏—Å—Ç–∫–∏ –º—É—Å–æ—Ä–∞: %d MB\n", memStats.Alloc/1024/1024)

    // –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã, —á—Ç–æ–±—ã –æ–Ω–∏ —Å—Ç–∞–ª–∏ '–º—É—Å–æ—Ä–æ–º'
    data = nil
    fmt.Println("–°—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã —É–¥–∞–ª–µ–Ω—ã, –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ üßπ")

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ –≤—Ä—É—á–Ω—É—é
    runtime.GC()

    // –ü–∞—É–∑–∞, —á—Ç–æ–±—ã —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ —Å–¥–µ–ª–∞–ª —Ä–∞–±–æ—Ç—É
    time.Sleep(2 * time.Second)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –∑–∞–Ω—è—Ç–æ–π –ø–∞–º—è—Ç–∏
    runtime.ReadMemStats(&memStats)
    fmt.Printf("–ü–∞–º—è—Ç—å –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –º—É—Å–æ—Ä–∞: %d MB\n", memStats.Alloc/1024/1024)

    fmt.Println("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ! –ù–∞–¥–µ—é—Å—å, —Ç–µ–ø–µ—Ä—å —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞ ‚Äî –Ω–µ –∑–∞–≥–∞–¥–∫–∞! ü§ì")
}
