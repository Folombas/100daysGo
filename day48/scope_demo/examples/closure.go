package examples

import "fmt"

// DemoClosures –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∑–∞–º—ã–∫–∞–Ω–∏—è –∏ –∏—Ö –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
func DemoClosures() {
	// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —É—Ä–æ–≤–Ω—è —Ñ—É–Ω–∫—Ü–∏–∏
	counter := 0
	message := "–ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
	
	fmt.Println("üîÑ –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ counter:", counter)
	fmt.Println("üí¨ –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", message)
	
	// –°–æ–∑–¥–∞–µ–º –∑–∞–º—ã–∫–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–∏
	increment := func() {
		counter++ // –ò–∑–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
		message = "–ò–∑–º–µ–Ω–µ–Ω–æ –∑–∞–º—ã–∫–∞–Ω–∏–µ–º"
		fmt.Println("   üì¶ –ó–∞–º—ã–∫–∞–Ω–∏–µ: counter =", counter, "message =", message)
	}
	
	// –í—ã–∑—ã–≤–∞–µ–º –∑–∞–º—ã–∫–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
	increment()
	increment()
	increment()
	
	fmt.Println("üîÑ –ö–æ–Ω–µ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ counter:", counter)
	fmt.Println("üí¨ –ö–æ–Ω–µ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", message)
	
	// –ó–∞–º—ã–∫–∞–Ω–∏–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
	multiplier := createMultiplier(2)
	fmt.Println("‚úñÔ∏è  –£–º–Ω–æ–∂–∏—Ç–µ–ª—å 2 * 5 =", multiplier(5))
	fmt.Println("‚úñÔ∏è  –£–º–Ω–æ–∂–∏—Ç–µ–ª—å 2 * 10 =", multiplier(10))
}

// createMultiplier —Å–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–º—ã–∫–∞–Ω–∏–µ
func createMultiplier(factor int) func(int) int {
	// factor "–∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç—Å—è" –∑–∞–º—ã–∫–∞–Ω–∏–µ–º
	return func(x int) int {
		return x * factor
	}
}