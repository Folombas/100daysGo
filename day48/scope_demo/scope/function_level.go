package scope

import "fmt"

// DemoFunctionLevelScope –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–π
func DemoFunctionLevelScope() {
	functionVariable := "–Ø –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–∏ DemoFunctionLevelScope"
	fmt.Println("üè† –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–∏:", functionVariable)
	
	// –í–ª–æ–∂–µ–Ω–Ω—ã–π –±–ª–æ–∫ (if)
	if true {
		blockVariable := "–Ø –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±–ª–æ–∫–∞ if"
		fmt.Println("   üì¶ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±–ª–æ–∫–∞ if:", blockVariable)
		
		// –î–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –±–ª–æ–∫–∞
		fmt.Println("   üè† –î–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –±–ª–æ–∫–∞:", functionVariable)
	}
	
	// –û—à–∏–±–∫–∞! blockVariable –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤–Ω–µ –±–ª–æ–∫–∞ if
	// fmt.Println(blockVariable) // –≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
	
	// –í—ã–∑–æ–≤ –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
	anotherFunction()
}

func anotherFunction() {
	anotherVar := "–Ø –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏"
	fmt.Println("üè† –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è anotherFunction:", anotherVar)
	
	// –û—à–∏–±–∫–∞! functionVariable –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
	// fmt.Println(functionVariable) // –≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
}