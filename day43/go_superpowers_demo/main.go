package main

import (
	"fmt"
	"os"
)

func main() {
	fmt.Println("üöÄ Day 43: –ü–æ—á–µ–º—É Go - –°—É–ø–µ—Ä—Å–∏–ª—ã —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞")
	fmt.Println("==========================================================")
	
	if len(os.Args) < 2 {
		printUsage()
		return
	}
	
	switch os.Args[1] {
	case "web":
		fmt.Println("üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–∞...")
		StartWebServer()
	case "cli":
		fmt.Println("üêö –ó–∞–ø—É—Å–∫ CLI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞...")
		// –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç (–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã)
		os.Args = os.Args[1:]
		StartCLI()
	case "concurrency":
		fmt.Println("‚ö° –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç–∏...")
		StartWorkerPool()
	case "benchmark":
		fmt.Println("üèéÔ∏è  –ó–∞–ø—É—Å–∫ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤...")
		printBenchmarkInfo()
	default:
		fmt.Printf("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: %s\n", os.Args[1])
		printUsage()
	}
}

func printBenchmarkInfo() {
	fmt.Println("üèéÔ∏è  –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:")
	fmt.Println("   –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å vs –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
	
	// –ó–∞–ø—É—Å–∫ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
	fmt.Println("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
	fmt.Println("   go test -bench=. -benchmem")
}

func printUsage() {
	fmt.Println("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
	fmt.Println("  go run . web     - –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–∞")
	fmt.Println("  go run . cli     - –ó–∞–ø—É—Å–∫ CLI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞")
	fmt.Println("  go run . concurrency - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç–∏")
	fmt.Println("  go run . benchmark  - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–Ω—á–º–∞—Ä–∫–∞—Ö")
	fmt.Println()
	fmt.Println("–ü—Ä–∏–º–µ—Ä—ã CLI:")
	fmt.Println("  go run . cli --text=\"–ü—Ä–∏–≤–µ—Ç –º–∏—Ä\" --op=upper")
	fmt.Println("  go run . cli --text=\"–ü–†–ò–í–ï–¢ –ú–ò–†\" --op=lower")
	fmt.Println("  go run . cli --text=\"–ø—Ä–∏–≤–µ—Ç –º–∏—Ä\" --op=title")
	fmt.Println("  go run . cli --text=\"–ø—Ä–∏–≤–µ—Ç\" --op=reverse")
	fmt.Println()
	fmt.Println("–î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
	fmt.Println("   go test -bench=. -benchmem")
}