package main

import (
	"math/rand"
	"strings"
	"time"

	"gopkg.in/telebot.v3"
)

// createMainMenu —Å–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
func createMainMenu() *telebot.ReplyMarkup {
	menu := &telebot.ReplyMarkup{ResizeKeyboard: true}

	// –°–æ–∑–¥–∞–µ–º —Ä—è–¥—ã –∫–Ω–æ–ø–æ–∫
	row1 := menu.Row(
		menu.Text("üìö –§–∞–∫—Ç –æ Go"),
		menu.Text("üíª –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞"),
	)
	row2 := menu.Row(
		menu.Text("üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏"),
		menu.Text("üå§Ô∏è –ü–æ–≥–æ–¥–∞"),
	)
	row3 := menu.Row(
		menu.Text("‚ùì –ü–æ–º–æ—â—å"),
		menu.Text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
	)

	menu.Reply(row1, row2, row3)
	return menu
}

// createInlineKeyboard —Å–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
func createInlineKeyboard() *telebot.ReplyMarkup {
	inlineKeys := &telebot.ReplyMarkup{}

	// –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –∫–Ω–æ–ø–æ–∫ –∏ —Å—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
	inlineKeys.Inline(
		inlineKeys.Row(
			inlineKeys.URL("–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç", "https://golang.org"),
			inlineKeys.URL("–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", "https://pkg.go.dev"),
		),
		inlineKeys.Row(
			inlineKeys.URL("Tour of Go", "https://tour.golang.org"),
			inlineKeys.URL("Awesome Go", "https://awesome-go.com"),
		),
	)

	return inlineKeys
}

// handleStart –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
func handleStart(c telebot.Context) error {
	menu := createMainMenu()

	message := `üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è Go!

–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∏–∑—É—á–∏—Ç—å —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Go —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —É—Ä–æ–∫–∏, –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã.

–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã:`

	return c.Send(message, menu)
}

// handleHelp –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help
func handleHelp(c telebot.Context) error {
	menu := createMainMenu()

	message := `üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:

–Ø —Å–æ–∑–¥–∞–Ω —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –≤ –∏–∑—É—á–µ–Ω–∏–∏ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Go. –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:

‚Ä¢ –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö Go
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞
‚Ä¢ –î–µ–ª–∏—Ç—å—Å—è –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏
‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã

–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º!`

	return c.Send(message, menu)
}

// handleGoFact –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /go –∏ –∫–Ω–æ–ø–∫—É "–§–∞–∫—Ç –æ Go"
func handleGoFact(c telebot.Context) error {
	facts := []string{
		"Go –±—ã–ª —Å–æ–∑–¥–∞–Ω –≤ Google –≤ 2009 –≥–æ–¥—É –†–æ–±–æ–º –ü–∞–π–∫–æ–º, –ö–µ–Ω–æ–º –¢–æ–º–ø—Å–æ–Ω–æ–º –∏ –†–æ–±–µ—Ä—Ç–æ–º –ì—Ä–∏–∑–º–µ—Ä–æ–º.",
		"Go –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –≤ –æ–¥–∏–Ω –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - —ç—Ç–æ —É–ø—Ä–æ—â–∞–µ—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ!",
		"–ì–æ—Ä—É—Ç–∏–Ω—ã - —ç—Ç–æ –ª–µ–≥–∫–æ–≤–µ—Å–Ω—ã–µ –ø–æ—Ç–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –ª–µ–≥–∫–æ –ø–∏—Å–∞—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π –∫–æ–¥.",
		"–í Go –µ—Å—Ç—å —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º —è–∑—ã–∫ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø–∞–º—è—Ç—å—é.",
		"–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Go –æ—á–µ–Ω—å –±–æ–≥–∞—Ç–∞—è –∏ –≤–∫–ª—é—á–∞–µ—Ç HTTP-—Å–µ—Ä–≤–µ—Ä, —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.",
		"Go –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Docker, Kubernetes, Terraform –∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö.",
		"–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –≤ Go —Ä–µ–∞–ª–∏–∑—É—é—Ç—Å—è –Ω–µ—è–≤–Ω–æ - —ç—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º –∏ —Ä–∞—Å—à–∏—Ä—è–µ–º—ã–º.",
	}

	rand.Seed(time.Now().UnixNano())
	fact := facts[rand.Intn(len(facts))]

	menu := createMainMenu()
	return c.Send("üìö –§–∞–∫—Ç –æ Go:\n\n"+fact, menu)
}

// handleCodeExample –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /code –∏ –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞"
func handleCodeExample(c telebot.Context) error {
	examples := []string{
		`// –ü—Ä–æ—Å—Ç–æ–π HTTP-—Å–µ—Ä–≤–µ—Ä –Ω–∞ Go
package main

import (
    "fmt"
    "net/http"
)

func main() {
    http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
        fmt.Fprintf(w, "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!")
    })
    
    fmt.Println("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ :8080")
    http.ListenAndServe(":8080", nil)
}`,

		`// –ì–æ—Ä—É—Ç–∏–Ω—ã –∏ –∫–∞–Ω–∞–ª—ã
package main

import (
    "fmt"
    "time"
)

func worker(id int, jobs <-chan int, results chan<- int) {
    for j := range jobs {
        fmt.Printf("–í–æ—Ä–∫–µ—Ä %d –Ω–∞—á–∞–ª –∑–∞–¥–∞—á—É %d\n", id, j)
        time.Sleep(time.Second)
        fmt.Printf("–í–æ—Ä–∫–µ—Ä %d –∑–∞–≤–µ—Ä—à–∏–ª –∑–∞–¥–∞—á—É %d\n", id, j)
        results <- j * 2
    }
}

func main() {
    jobs := make(chan int, 100)
    results := make(chan int, 100)
    
    for w := 1; w <= 3; w++ {
        go worker(w, jobs, results)
    }
    
    for j := 1; j <= 5; j++ {
        jobs <- j
    }
    close(jobs)
    
    for a := 1; a <= 5; a++ {
        <-results
    }
}`,

		`// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ Go
package main

import (
    "errors"
    "fmt"
)

func divide(a, b float64) (float64, error) {
    if b == 0 {
        return 0, errors.New("–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å")
    }
    return a / b, nil
}

func main() {
    result, err := divide(10, 2)
    if err != nil {
        fmt.Println("–û—à–∏–±–∫–∞:", err)
        return
    }
    fmt.Println("–†–µ–∑—É–ª—å—Ç–∞—Ç:", result)
}`,
	}

	rand.Seed(time.Now().UnixNano())
	example := examples[rand.Intn(len(examples))]

	menu := createMainMenu()
	return c.Send("üíª –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –Ω–∞ Go:\n\n```go\n"+example+"\n```", menu, telebot.ModeMarkdownV2)
}

// handleLinks –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /links –∏ –∫–Ω–æ–ø–∫—É "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏"
func handleLinks(c telebot.Context) error {
	inlineKeys := createInlineKeyboard()

	message := `üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –ø–æ Go:

‚Ä¢ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç: https://golang.org
‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://pkg.go.dev
‚Ä¢ Tour of Go: https://tour.golang.org
‚Ä¢ Go by Example: https://gobyexample.com
‚Ä¢ Awesome Go: https://awesome-go.com
‚Ä¢ Go Forum: https://forum.golangbridge.org

üìö –ö–Ω–∏–≥–∏:
‚Ä¢ "The Go Programming Language" (Donovan & Kernighan)
‚Ä¢ "Go in Action" (Kennedy, Ketelsen, St. Martin)
‚Ä¢ "Learning Go" (Jon Bodner)`

	return c.Send(message, inlineKeys)
}

// handleWeather –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /weather –∏ –∫–Ω–æ–ø–∫—É "–ü–æ–≥–æ–¥–∞"
func handleWeather(c telebot.Context) error {
	weatherConditions := []string{
		"‚òÄÔ∏è –°–µ–≥–æ–¥–Ω—è —Å–æ–ª–Ω–µ—á–Ω–æ –∏ —Ç–µ–ø–ª–æ - –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è Go!",
		"üåßÔ∏è –ù–∞ —É–ª–∏—Ü–µ –¥–æ–∂–¥—å - —Å–∞–º–æ–µ –≤—Ä–µ–º—è —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è —Å –Ω–æ—É—Ç–±—É–∫–æ–º –∏ –ø–æ—á–∏—Ç–∞—Ç—å –ø—Ä–æ –≥–æ—Ä—É—Ç–∏–Ω—ã!",
		"‚ùÑÔ∏è –ü–æ—Ö–æ–ª–æ–¥–∞–ª–æ - —Å–æ–≥—Ä–µ–µ–º—Å—è –≥–æ—Ä—è—á–∏–º —á–∞–µ–º –∏ —Ç—ë–ø–ª—ã–º –∫–æ–¥–æ–º –Ω–∞ Go!",
		"üå§Ô∏è –õ–µ–≥–∫–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å - –∏–¥–µ–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã!",
		"üå™Ô∏è –ü–æ–≥–æ–¥–∞ –ø–µ—Ä–µ–º–µ–Ω—á–∏–≤–∞, –Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å Go –Ω–µ–∏–∑–º–µ–Ω–Ω–∞!",
	}

	rand.Seed(time.Now().UnixNano())
	weather := weatherConditions[rand.Intn(len(weatherConditions))]

	menu := createMainMenu()
	return c.Send(weather, menu)
}

// handleSettings –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
func handleSettings(c telebot.Context) error {
	menu := createMainMenu()

	message := `‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:

–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –ø–æ–¥ —Å–µ–±—è. –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è:

‚Ä¢ –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è
‚Ä¢ –¢–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è

–°–ª–µ–¥–∏ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏! üöÄ`

	return c.Send(message, menu)
}

// handleText –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏
func handleText(c telebot.Context) error {
	text := strings.ToLower(c.Text())
	menu := createMainMenu()

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
	switch text {
	case "üìö —Ñ–∞–∫—Ç –æ go":
		return handleGoFact(c)
	case "üíª –ø—Ä–∏–º–µ—Ä –∫–æ–¥–∞":
		return handleCodeExample(c)
	case "üîó –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏":
		return handleLinks(c)
	case "üå§Ô∏è –ø–æ–≥–æ–¥–∞":
		return handleWeather(c)
	case "‚ùì –ø–æ–º–æ—â—å":
		return handleHelp(c)
	case "‚öôÔ∏è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏":
		return handleSettings(c)
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
	responses := map[string]string{
		"–ø—Ä–∏–≤–µ—Ç":    "üëã –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–≤–æ–∏ —É—Å–ø–µ—Ö–∏ –≤ –∏–∑—É—á–µ–Ω–∏–∏ Go?",
		"–∫–∞–∫ –¥–µ–ª–∞":  "üöÄ –û—Ç–ª–∏—á–Ω–æ! –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –∏–∑—É—á–µ–Ω–∏–∏ Go. –ß—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?",
		"—Å–ø–∞—Å–∏–±–æ":   "üòä –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! –£–¥–∞—á–∏ –≤ –∏–∑—É—á–µ–Ω–∏–∏ Go!",
		"go":        "üêπ Go - –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –≠—Ç–æ –±—ã—Å—Ç—Ä—ã–π, –ø—Ä–æ—Å—Ç–æ–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —è–∑—ã–∫.",
		"–≥–æ—Ä—É—Ç–∏–Ω–∞":  "üîÑ –ì–æ—Ä—É—Ç–∏–Ω—ã - —ç—Ç–æ –ª–µ–≥–∫–æ–≤–µ—Å–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ Go. –û–Ω–∏ –¥–µ—à–µ–≤–ª–µ –ø–æ—Ç–æ–∫–æ–≤ –û–° –∏ –∏—Ö –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç—ã—Å—è—á–∞–º–∏!",
		"–∫–∞–Ω–∞–ª":     "üì® –ö–∞–Ω–∞–ª—ã - —ç—Ç–æ –ø—Ä–∏–º–∏—Ç–∏–≤—ã —Å–≤—è–∑–∏ –≤ Go, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –≥–æ—Ä—É—Ç–∏–Ω–∞–º –æ–±—â–∞—Ç—å—Å—è –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º.",
		"–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å": "üîå –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –≤ Go –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –∞ –Ω–µ –¥–∞–Ω–Ω—ã–µ. –¢–∏–ø —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ—è–≤–Ω–æ, –ø—Ä–æ—Å—Ç–æ –∏–º–µ—è –Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã.",
	}

	for keyword, response := range responses {
		if strings.Contains(text, keyword) {
			return c.Send(response, menu)
		}
	}

	// –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç
	return c.Send("ü§î –ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –≤–æ–ø—Ä–æ—Å. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:\n/start, /help, /go, /code, /links", menu)
}

// handleCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
func handleCallback(c telebot.Context) error {
	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback –¥–∞–Ω–Ω—ã–µ
	data := c.Callback().Data

	switch data {
	case "next_fact":
		return handleGoFact(c)
	case "next_code":
		return handleCodeExample(c)
	default:
		return c.Respond(&telebot.CallbackResponse{
			Text:      "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞",
			ShowAlert: false,
		})
	}
}
