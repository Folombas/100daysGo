package main

import (
	"fmt"
	"time"
)

func demoBenchmarks() {
	printSeparator()

	fmt.Println("‚ö° –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ü–∏–∫–ª–æ–≤:")

	// –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
	size := 1000000
	slice := make([]int, size)
	for i := range slice {
		slice[i] = i
	}

	// –¢–µ—Å—Ç 1: –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π for
	start := time.Now()
	sum1 := 0
	for i := 0; i < len(slice); i++ {
		sum1 += slice[i]
	}
	time1 := time.Since(start)

	// –¢–µ—Å—Ç 2: Range
	start = time.Now()
	sum2 := 0
	for _, value := range slice {
		sum2 += value
	}
	time2 := time.Since(start)

	// –¢–µ—Å—Ç 3: Range —Å –∏–Ω–¥–µ–∫—Å–æ–º
	start = time.Now()
	sum3 := 0
	for i := range slice {
		sum3 += slice[i]
	}
	time3 := time.Since(start)

	fmt.Printf("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã (—Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: %d):\n", size)
	fmt.Printf("üîπ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π for: %v, —Å—É–º–º–∞: %d\n", time1, sum1)
	fmt.Printf("üîπ Range –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é: %v, —Å—É–º–º–∞: %d\n", time2, sum2)
	fmt.Printf("üîπ Range –ø–æ –∏–Ω–¥–µ–∫—Å—É: %v, —Å—É–º–º–∞: %d\n", time3, sum3)

	fmt.Println("\nüí° –í—ã–≤–æ–¥: Range –ø–æ –∏–Ω–¥–µ–∫—Å—É –æ–±—ã—á–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤!")

	// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤
	fmt.Println("\nüéØ –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã (–º–∞—Ç—Ä–∏—Ü–∞):")
	matrix := [3][3]int{
		{1, 2, 3},
		{4, 5, 6},
		{7, 8, 9},
	}

	for i, row := range matrix {
		for j, value := range row {
			fmt.Printf("üìç matrix[%d][%d] = %d\n", i, j, value)
		}
	}
}
