package main

import (
	"fmt"
	"log"
	"net/http"
)

func main() {
	fmt.Println("üåê HTTPTEST –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø")
	fmt.Println("========================")
	fmt.Println()
	fmt.Println("üéØ –ì–æ—à–∞, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HTTP!")
	fmt.Println("üí° –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø–æ–∫–∞–∂–µ—Ç, –∫–∞–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤")
	fmt.Println()

	handler := NewAPIHandler()

	// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
	http.HandleFunc("/user", func(w http.ResponseWriter, r *http.Request) {
		switch r.Method {
		case http.MethodGet:
			handler.GetUserHandler(w, r)
		case http.MethodPost:
			handler.CreateUserHandler(w, r)
		default:
			http.Error(w, "–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è", http.StatusMethodNotAllowed)
		}
	})
	http.HandleFunc("/users", handler.GetAllUsersHandler)

	fmt.Println("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ http://localhost:8080")
	fmt.Println()
	fmt.Println("üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoint:")
	fmt.Println("   GET  /user?id=1     - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID")
	fmt.Println("   POST /user          - —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
	fmt.Println("   GET  /users         - –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
	fmt.Println()
	fmt.Println("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤:")
	fmt.Println("   go test -v          - –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã")
	fmt.Println("   go test -bench=.    - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–µ–Ω—á–º–∞—Ä–∫–∏")
	fmt.Println()
	fmt.Println("üí° –ü–æ–º–Ω–∏: httptest –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å HTTP –∫–æ–¥")
	fmt.Println("   –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ - —ç—Ç–æ –±—ã—Å—Ç—Ä–µ–µ –∏ –Ω–∞–¥–µ–∂–Ω–µ–µ!")
	fmt.Println()

	log.Fatal(http.ListenAndServe(":8080", nil))
}
