package main

import (
	"fmt"
	"strings"
)

func main() {
	fmt.Println("üöÄ Day 41: –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —è–∑—ã–∫–∞ Go")
	fmt.Println(strings.Repeat("=", 50))
	
	// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç–∏
	demonstrateGoroutines()
	demonstrateMutex()
	demonstrateChannels()
	
	fmt.Println("\n" + strings.Repeat("=", 50))
	
	// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
	demonstrateInterfaces()
	
	fmt.Println("\n" + strings.Repeat("=", 50))
	
	// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
	demonstrateErrorHandling()
	
	fmt.Println("\n" + strings.Repeat("=", 50))
	
	// –î—Ä—É–≥–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ Go
	demonstrateOtherFeatures()
}

func demonstrateOtherFeatures() {
	fmt.Println("=== –î—Ä—É–≥–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ Go ===")
	
	// –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π
	fmt.Println("--- –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π ---")
	a, b := multipleReturn()
	fmt.Printf("–í–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: %d, %s\n", a, b)
	
	// –ö–æ—Ä–æ—Ç–∫–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	fmt.Println("\n--- –ö–æ—Ä–æ—Ç–∫–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ---")
	x := 42
	y := "–ü—Ä–∏–≤–µ—Ç"
	fmt.Printf("x = %d, y = %s\n", x, y)
	
	// Range –ø–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º
	fmt.Println("\n--- Range –ø–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º ---")
	numbers := []int{1, 2, 3, 4, 5}
	for index, value := range numbers {
		fmt.Printf("–ò–Ω–¥–µ–∫—Å: %d, –ó–Ω–∞—á–µ–Ω–∏–µ: %d\n", index, value)
	}
	
	// –ó–∞–º—ã–∫–∞–Ω–∏—è
	fmt.Println("\n--- –ó–∞–º—ã–∫–∞–Ω–∏—è ---")
	counter := createCounter()
	fmt.Println("–°—á–µ—Ç—á–∏–∫:", counter())
	fmt.Println("–°—á–µ—Ç—á–∏–∫:", counter())
	fmt.Println("–°—á–µ—Ç—á–∏–∫:", counter())
}

func multipleReturn() (int, string) {
	return 42, "–æ—Ç–≤–µ—Ç"
}

func createCounter() func() int {
	count := 0
	return func() int {
		count++
		return count
	}
}